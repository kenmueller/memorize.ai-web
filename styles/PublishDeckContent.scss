@use 'variables' as *;

.publish-deck-content {
	display: flex;
	flex-direction: column;
	align-items: center;

	@media (min-width: 1150px) {
		flex-direction: row;
		align-items: flex-start;

		> .image-picker {
			margin: 0 30px 0 0 !important;
		}
	}

	> .image-picker {
		flex-shrink: 0;
		margin-bottom: 20px;
	}

	> .right {
		flex-grow: 1;
		align-self: stretch;

		> .inputs {
			display: flex;
			flex-direction: column;
			margin-top: -24px;

			> label {
				margin: 24px 0 12px;
				font-weight: 900;
				color: $dark-gray;

				> span {
					opacity: 0.7;
				}
			}

			> input,
			> textarea {
				color: $dark-gray;
				background: transparentize(#f0f1f8, 0.18);
				border-radius: 15px;
			}

			> input {
				padding: 12px 20px;
			}

			> textarea {
				min-height: 100px;
				height: 150px;
				padding: 16px 20px;
			}
		}

		> .no-topics-message {
			margin-top: 24px;
			font-weight: bold;
			color: $red-600;
			transition: margin-top 0.3s, opacity 0.3s;

			&[hidden] {
				display: block;
				margin-top: -6px;
				pointer-events: none;
				opacity: 0;
			}
		}

		> .topics {
			--cell-dimension: 100px;
			--font-size: 14px;

			display: grid;
			grid-template-columns: repeat(auto-fill, var(--cell-dimension));
			gap: 12px;
			justify-content: center;
			margin-top: 16px;

			@media (min-width: 450px) {
				--cell-dimension: 150px;
				--font-size: 16px;

				> button > .check {
					--inset: 12px !important;

					transform: none !important;
				}
			}

			> button {
				position: relative;
				overflow: hidden;
				width: var(--cell-dimension);
				height: var(--cell-dimension);
				border-radius: 8px;
				background-size: cover;
				background-position: center;

				> .check,
				> p {
					position: absolute;
				}

				> .check {
					$dimension: 30px;

					--inset: 8px;

					top: var(--inset);
					right: var(--inset);
					width: $dimension;
					height: $dimension;
					background: transparentize(white, 0.5);
					border: 1px solid white;
					border-radius: 50%;
					transform: scale(0.8);
					transition: background 0.3s, border 0.3s;

					> svg {
						color: white;
						opacity: 0;
						transform: translateY(2.5px);
						transition: opacity 0.3s;
					}
				}

				&.selected > .check {
					background: #00d388;
					border-color: #00d388;

					> svg {
						opacity: 1;
					}
				}

				> p {
					right: 8px;
					bottom: 12px;
					left: 8px;
					font-size: var(--font-size);
					text-align: center;
					font-weight: bold;
					color: white;
				}
			}
		}
	}
}
